package library;

import dao.DaoImpl;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import model.Book;
import model.BookStatus;
import model.Item;
import model.OrderBook;
import model.Student;

public class AddOrderBookFrame extends javax.swing.JFrame {

    private DaoImpl dao;
    private Long selectedRow;
    private int minusBook;

    public AddOrderBookFrame() {
        initComponents();
    }

    AddOrderBookFrame(DaoImpl dao, Long selectedRow) {
        try {
            initComponents();
            this.dao = dao;
            this.selectedRow = selectedRow;
            jLabel4.setVisible(false);
            jLabel5.setVisible(false);
            jLabel6.setVisible(false);
            bookCombo.setVisible(false);
            borrowTime.setVisible(false);
            priceTxt.setVisible(false);

            Book book = dao.getBookById(selectedRow);
            bookTxt.setText(book.getTitle());
            priceTxt.setText(book.getPrice().toString());

            minusBook = book.getCopies() - 1;

            ViewStudentListInComboBox();
            ViewBookStatusListInComboBox();

        } catch (Exception ex) {
            Logger.getLogger(AddOrderBookFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    AddOrderBookFrame(DaoImpl dao) {
        try {
            initComponents();
            this.dao = dao;
            jLabel4.setVisible(false);
            jLabel5.setVisible(false);
            borrowTime.setVisible(false);
            priceTxt.setVisible(false);

            jLabel2.setVisible(false);
            bookTxt.setVisible(false);

            ViewStudentListInComboBox();
            ViewBookStatusListInComboBox();
            ViewBookListInComboBox();
            Item bookItem = (Item) bookCombo.getSelectedItem();
            Book book = dao.getBookById(bookItem.getId());
            minusBook = book.getCopies() - 1;
        } catch (Exception ex) {
            Logger.getLogger(AddOrderBookFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        addBtn = new javax.swing.JLabel();
        studentCombo = new javax.swing.JComboBox<>();
        bookTxt = new javax.swing.JTextField();
        bookStatusCombo = new javax.swing.JComboBox<>();
        priceTxt = new javax.swing.JTextField();
        borrowTime = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        bookCombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel1.setText("TƏLƏBƏ");

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel2.setText("KİTAB");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel3.setText("KİTAB STATUSU");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel4.setText("QİYMƏTİ");

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel5.setText("KİRAYƏ VAXTI");

        addBtn.setIcon(new javax.swing.ImageIcon("C:\\Users\\Windows10\\Downloads\\button (4).png")); // NOI18N
        addBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBtnMouseClicked(evt);
            }
        });

        studentCombo.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        studentCombo.setPreferredSize(new java.awt.Dimension(241, 29));

        bookTxt.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        bookStatusCombo.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        bookStatusCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookStatusComboActionPerformed(evt);
            }
        });

        priceTxt.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        borrowTime.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel6.setText("KİTAB");

        bookCombo.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        bookCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addBtn)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addGap(110, 110, 110)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bookCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(borrowTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(studentCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bookStatusCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(priceTxt, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(bookTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(studentCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(bookCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(bookStatusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(borrowTime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(84, 84, 84)
                .addComponent(addBtn)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bookStatusComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookStatusComboActionPerformed
        Item statusItem = (Item) bookStatusCombo.getSelectedItem();
        if (statusItem.getId() == 1) {
            jLabel5.setVisible(false);
            borrowTime.setVisible(false);
            jLabel4.setVisible(true);
            priceTxt.setVisible(true);
        }
        if (statusItem.getId() == 2) {
            jLabel4.setVisible(true);
            priceTxt.setVisible(true);
            jLabel5.setVisible(true);
            borrowTime.setVisible(true);
        }
        if (statusItem.getId() == 4) {
            jLabel4.setVisible(false);
            priceTxt.setVisible(false);
            jLabel5.setVisible(false);
            borrowTime.setVisible(false);
        }
    }//GEN-LAST:event_bookStatusComboActionPerformed

    private void addBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseClicked
        try {
            Item statusItem = (Item) bookStatusCombo.getSelectedItem();
            Item studentItem = (Item) studentCombo.getSelectedItem();
            Item bookItem = (Item) bookCombo.getSelectedItem();
            Student student = new Student();
            student.setId(studentItem.getId());

            BookStatus bookStatus = new BookStatus();
            bookStatus.setId(statusItem.getId());

            Book book = new Book();
            book.setId(selectedRow);

            OrderBook orderBook = new OrderBook();
            if (selectedRow == null) {
                if (statusItem.getId() == 1) {

                    jLabel5.setVisible(false);
                    borrowTime.setVisible(false);
                    jLabel4.setVisible(true);
                    priceTxt.setVisible(true);

                    orderBook.setStudent(student);
                    book.setId(bookItem.getId());

                    orderBook.setBook(book);
                    orderBook.setBookStatus(bookStatus);
                    orderBook.setPrice(Float.valueOf(priceTxt.getText()));

                    boolean isAdded = dao.addSoldBook(orderBook);
                    if (isAdded) {
                        JOptionPane.showMessageDialog(null, "Əlavə olundu...");
                        boolean minusBookNum = dao.updateBookNum(minusBook, bookItem.getId());
                        this.dispose();
                    }
                } else if (statusItem.getId() == 2) {

                    jLabel4.setVisible(true);
                    priceTxt.setVisible(true);
                    jLabel5.setVisible(true);
                    borrowTime.setVisible(true);

                    book.setId(bookItem.getId());
                    orderBook.setStudent(student);
                    orderBook.setBook(book);
                    orderBook.setBookStatus(bookStatus);
                    orderBook.setPrice(Float.valueOf(priceTxt.getText()));
                    orderBook.setBorrowTime(borrowTime.getDate());

                    boolean isAdded = dao.addBorrowBook(orderBook);
                    if (isAdded) {
                        JOptionPane.showMessageDialog(null, "Əlavə olundu...");
                        boolean minusBookNum = dao.updateBookNum(minusBook, bookItem.getId());
                        this.dispose();
                    }

                } else if (statusItem.getId() == 4) {

                    jLabel4.setVisible(false);
                    priceTxt.setVisible(false);
                    jLabel5.setVisible(false);
                    borrowTime.setVisible(false);
                    book.setId(bookItem.getId());
                    orderBook.setStudent(student);
                    orderBook.setBook(book);
                    orderBook.setBookStatus(bookStatus);

                    boolean isAdded = dao.addReadNowBook(orderBook);
                    if (isAdded) {
                        JOptionPane.showMessageDialog(null, "Əlavə olundu...");
                        boolean minusBookNum = dao.updateBookNum(minusBook, bookItem.getId());
                        this.dispose();
                    }

                }
            } else if (statusItem.getId() == 1) {

                jLabel5.setVisible(false);
                borrowTime.setVisible(false);
                jLabel4.setVisible(true);
                priceTxt.setVisible(true);

                orderBook.setStudent(student);

                orderBook.setBook(book);
                orderBook.setBookStatus(bookStatus);
                orderBook.setPrice(Float.valueOf(priceTxt.getText()));

                boolean isAdded = dao.addSoldBook(orderBook);
                if (isAdded) {
                    JOptionPane.showMessageDialog(null, "Əlavə olundu...");
                    System.out.println(minusBook);
                    boolean minusBookNum = dao.updateBookNum(minusBook, selectedRow);
                    this.dispose();
                }
            } else if (statusItem.getId() == 2) {

                jLabel4.setVisible(true);
                priceTxt.setVisible(true);
                jLabel5.setVisible(true);
                borrowTime.setVisible(true);

                orderBook.setStudent(student);
                orderBook.setBook(book);
                orderBook.setBookStatus(bookStatus);
                orderBook.setPrice(Float.valueOf(priceTxt.getText()));
                orderBook.setBorrowTime(borrowTime.getDate());

                boolean isAdded = dao.addBorrowBook(orderBook);
                if (isAdded) {
                    JOptionPane.showMessageDialog(null, "Əlavə olundu...");

                    boolean minusBookNum = dao.updateBookNum(minusBook, selectedRow);
                    this.dispose();
                }

            } else if (statusItem.getId() == 4) {

                jLabel4.setVisible(false);
                priceTxt.setVisible(false);
                jLabel5.setVisible(false);
                borrowTime.setVisible(false);

                orderBook.setStudent(student);
                orderBook.setBook(book);
                orderBook.setBookStatus(bookStatus);

                boolean isAdded = dao.addReadNowBook(orderBook);
                if (isAdded) {
                    JOptionPane.showMessageDialog(null, "Əlavə olundu...");
                    boolean minusBookNum = dao.updateBookNum(minusBook, selectedRow);
                    this.dispose();
                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_addBtnMouseClicked

    private void bookComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookComboActionPerformed
        try {
            Item bookItem = (Item) bookCombo.getSelectedItem();
            Book book = dao.getBookById(bookItem.getId());
            minusBook = book.getCopies() - 1;
            priceTxt.setText(book.getPrice().toString());
        } catch (Exception ex) {
            Logger.getLogger(AddOrderBookFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bookComboActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addBtn;
    private javax.swing.JComboBox<String> bookCombo;
    private javax.swing.JComboBox<String> bookStatusCombo;
    private javax.swing.JTextField bookTxt;
    private com.toedter.calendar.JDateChooser borrowTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField priceTxt;
    private javax.swing.JComboBox<String> studentCombo;
    // End of variables declaration//GEN-END:variables

    private void ViewStudentListInComboBox() {
        try {
            DefaultComboBoxModel model = (DefaultComboBoxModel) studentCombo.getModel();
            List<Student> studentList = dao.getStudentList();
            for (Student student : studentList) {
                model.addElement(new Item(student.getId(), student.getName() + " " + student.getSurname()));
            }
        } catch (Exception ex) {
            Logger.getLogger(AddOrderBookFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void ViewBookStatusListInComboBox() {
        try {
            DefaultComboBoxModel model = (DefaultComboBoxModel) bookStatusCombo.getModel();
            List<BookStatus> statusList = dao.getBookStatus();
            for (BookStatus status : statusList) {
                model.addElement(new Item(status.getId(), status.getStatusName()));
            }
            model.removeElementAt(2);
        } catch (Exception ex) {
            Logger.getLogger(AddOrderBookFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void ViewBookListInComboBox() {
        try {
            DefaultComboBoxModel model = (DefaultComboBoxModel) bookCombo.getModel();
            List<Book> bookList = dao.getBookList();
            for (Book book : bookList) {
                model.addElement(new Item(book.getId(), book.getTitle()));
            }
        } catch (Exception ex) {
            Logger.getLogger(AddOrderBookFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
