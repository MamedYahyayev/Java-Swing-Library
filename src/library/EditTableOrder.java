package library;

import dao.DaoImpl;
import java.util.List;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import model.Item;
import model.Menu;
import model.OnlyOrder;
import model.Table;
import model.TableOrder;

public class EditTableOrder extends javax.swing.JFrame {

    private DaoImpl dao;
    private Long selectedRow;
    private float price;
    private Long firstTableId;
    private Long secondTableId;
    private Long orderId;
    private Long orderRowNum;

    public EditTableOrder() {
        initComponents();
    }

    EditTableOrder(DaoImpl dao, Long selectedRow) {
        try {
            initComponents();
            this.dao = dao;
            this.selectedRow = selectedRow;

            TableOrder tableOrder = dao.getTableOrderById(selectedRow);
            ViewTableListInComboBox(tableOrder);
            ViewMenuListInCombo(tableOrder);

            firstTableId = tableOrder.getTable().getId();
            orderId = tableOrder.getOrder().getId();

            nameTxt.setText(tableOrder.getResName());
            numSpinner.setValue(tableOrder.getOrder().getNum());
            priceTxt.setText(tableOrder.getOrder().getPrice().toString());
            orderTxt.setText(tableOrder.getOrder().gettOrder());

            TableOrder tableOrderForTable = dao.getTableOrderListByTableId(firstTableId);
            orderRowNum = tableOrderForTable.getRowNum();

        } catch (Exception ex) {
            Logger.getLogger(EditTableOrder.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        priceTxt = new javax.swing.JTextField();
        editBtn = new javax.swing.JLabel();
        tableCombo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        orderTxt = new javax.swing.JTextField();
        menuCombo = new javax.swing.JComboBox<>();
        numSpinner = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        bg.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("AD");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("MASA");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("SİFARİŞ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("HESAB");

        nameTxt.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        priceTxt.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        editBtn.setIcon(new javax.swing.ImageIcon("C:\\Users\\Windows10\\Downloads\\button (6).png")); // NOI18N
        editBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editBtnMouseClicked(evt);
            }
        });

        tableCombo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("SAY");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("MENYU");

        orderTxt.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        menuCombo.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        menuCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuComboActionPerformed(evt);
            }
        });

        numSpinner.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        numSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numSpinnerStateChanged(evt);
            }
        });

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(editBtn)
                                .addGroup(bgLayout.createSequentialGroup()
                                    .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2))
                                    .addGap(78, 78, 78)
                                    .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tableCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(menuCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(numSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(95, 95, 95)
                                    .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                    .addGap(72, 72, 72)
                                    .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(priceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(orderTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(27, Short.MAX_VALUE))))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tableCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(orderTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(priceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(numSpinner)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(45, 45, 45)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menuCombo)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(67, 67, 67)
                .addComponent(editBtn)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void editBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBtnMouseClicked
        try {
            Item menuItem = (Item) menuCombo.getSelectedItem();
            Item tableItem = (Item) tableCombo.getSelectedItem();

            String resName = nameTxt.getText();
            int num = (int) numSpinner.getValue();
            String tOrder = orderTxt.getText();
            Float price = Float.valueOf(priceTxt.getText());

            Menu menu = new Menu();
            OnlyOrder onlyOrder = new OnlyOrder();

            menu.setId(menuItem.getId());
            onlyOrder.setResName(resName);
            onlyOrder.setNum(num);
            onlyOrder.setMenu(menu);
            onlyOrder.settOrder(tOrder);
            onlyOrder.setPrice(price);

            secondTableId = tableItem.getId();

            Table table = new Table();
            table.setId(secondTableId);

            TableOrder tableOrder = new TableOrder();
            tableOrder.setOrder(onlyOrder);
            tableOrder.setResName(resName);
            tableOrder.setTable(table);
            onlyOrder.setId(orderId);
            boolean isUpdateOnlyOrder = dao.updateOnlyOrder(onlyOrder, orderId);
            if (isUpdateOnlyOrder) {

                boolean isUpdateTableOrder = dao.updateTableOrder(tableOrder, selectedRow);

                if (isUpdateTableOrder) {
                    boolean changeSTableStatusToFull = dao.changeTableStatus(secondTableId, (long) 2);

                    if (orderRowNum > 1) {
                        boolean changeFTableStatusToFull = dao.changeTableStatus(firstTableId, (long) 2);
                    } else {
                        boolean changeTableStatusToEmpty = dao.changeTableStatus(firstTableId, (long) 1);
                    }

                }
                JOptionPane.showMessageDialog(null, "Düzəliş edildi...");
                this.dispose();
            }
        } catch (Exception ex) {
            //
            Logger.getLogger(EditTableOrder.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_editBtnMouseClicked

    private void numSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numSpinnerStateChanged
        try {
            int num = (int) numSpinner.getValue();
            Item menuItem = (Item) menuCombo.getSelectedItem();
            Menu menu = dao.getMenuById(menuItem.getId());
            orderTxt.setText(num + " ədəd " + menu.getMenuName());
            price = num * menu.getPrice();
            priceTxt.setText(String.valueOf(price));
        } catch (Exception ex) {
            Logger.getLogger(EditTableOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_numSpinnerStateChanged

    private void menuComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuComboActionPerformed
        try {
            int num = (int) numSpinner.getValue();
            Item menuItem = (Item) menuCombo.getSelectedItem();
            Menu menu = dao.getMenuById(menuItem.getId());
            orderTxt.setText(num + " ədəd " + menu.getMenuName());
            price = num * menu.getPrice();
            priceTxt.setText(String.valueOf(price));
        } catch (Exception ex) {
            Logger.getLogger(EditTableOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menuComboActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JLabel editBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JComboBox<String> menuCombo;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JSpinner numSpinner;
    private javax.swing.JTextField orderTxt;
    private javax.swing.JTextField priceTxt;
    private javax.swing.JComboBox<String> tableCombo;
    // End of variables declaration//GEN-END:variables

    private void ViewTableListInComboBox(TableOrder tableOrder) {
        try {
            DefaultComboBoxModel model = (DefaultComboBoxModel) tableCombo.getModel();
            List<Table> tableList = dao.getTableList();
            for (Table table : tableList) {
                model.addElement(new Item(table.getId(), table.getName()));
            }
            model.setSelectedItem(new Item(tableOrder.getTable().getId(), tableOrder.getTable().getName()));
        } catch (Exception ex) {
            Logger.getLogger(EditTableOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void ViewMenuListInCombo(TableOrder tableOrder) {
        try {
            DefaultComboBoxModel model = (DefaultComboBoxModel) menuCombo.getModel();
            List<Menu> menuList = dao.getMenuList();
            for (Menu menu : menuList) {
                model.addElement(new Item(menu.getId(), menu.getMenuName()));
            }
            model.setSelectedItem(new Item(tableOrder.getOrder().getMenu().getId(), tableOrder.getOrder().getMenu().getMenuName()));

        } catch (Exception ex) {
            Logger.getLogger(EditTableOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
