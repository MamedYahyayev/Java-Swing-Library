package library;

import dao.DaoImpl;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import model.Item;
import model.Paid;
import model.Table;
import model.TableOrder;

public class EditPaid extends javax.swing.JFrame {

    private DaoImpl dao;
    private Long selectedRow;

    public EditPaid() {
        initComponents();
    }

    EditPaid(DaoImpl dao, Long selectedRow) {
        try {
            initComponents();
            this.dao = dao;
            this.selectedRow = selectedRow;

            Paid paid = dao.getPaidById(selectedRow);
            ViewTableListInComboBox(paid);
            priceTxt.setText(paid.getPrice().toString());
        } catch (Exception ex) {
            Logger.getLogger(EditPaid.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        editBtn = new javax.swing.JLabel();
        tableCombo = new javax.swing.JComboBox<>();
        priceTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("HESAB");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("MASA");

        editBtn.setIcon(new javax.swing.ImageIcon("C:\\Users\\Windows10\\Downloads\\button (5).png")); // NOI18N
        editBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editBtnMouseClicked(evt);
            }
        });

        tableCombo.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        priceTxt.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(71, 71, 71)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tableCombo, 0, 182, Short.MAX_VALUE)
                            .addComponent(priceTxt)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(editBtn)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tableCombo)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(priceTxt))
                .addGap(74, 74, 74)
                .addComponent(editBtn)
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void editBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBtnMouseClicked
        try {
            Item tableItem = (Item) tableCombo.getSelectedItem();
            String price = priceTxt.getText();
            Paid paid = dao.getPaidById(selectedRow);
            paid.setPrice(Float.parseFloat(price));

            boolean isUpdate = dao.updatePaid(paid, selectedRow);
            if (isUpdate) {
                boolean changeTableInPaidTable = dao.changeTableInPaidTable(tableItem.getId(), paid.getTableOrder().getId());
                if (changeTableInPaidTable) {
                    JOptionPane.showMessageDialog(null, "Dəyişiklik edildi...");
                    this.dispose();
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(EditPaid.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editBtnMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel editBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField priceTxt;
    private javax.swing.JComboBox<String> tableCombo;
    // End of variables declaration//GEN-END:variables

    private void ViewTableListInComboBox(Paid paid) {
        try {
            DefaultComboBoxModel model = (DefaultComboBoxModel) tableCombo.getModel();
            List<Table> tableList = dao.getTableList();
            for (Table table : tableList) {
                model.addElement(new Item(table.getId(), table.getName()));
            }
            model.setSelectedItem(new Item(paid.getTableOrder().getTable().getId(), paid.getTableOrder().getTable().getName()));
        } catch (Exception ex) {
            Logger.getLogger(EditPaid.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
